import React from 'react'
import { motion } from 'framer-motion'
import { Sparkles, ChevronDown } from 'lucide-react'

const ScriptReview = ({
  generatedScript,
  setGeneratedScript,
  onStartOver,
  onRegenerate,
  onApprove
}) => (
  <motion.div
    key="stage2"
    className="flex items-start justify-center px-4"
    initial={{ y: 100, opacity: 0 }}
    animate={{ y: 0, opacity: 1 }}
    exit={{ y: -100, opacity: 0 }}
    transition={{ type: 'spring', stiffness: 80, damping: 20 }}
  >
    <div className="w-full max-w-4xl">
      <motion.div
        className="relative"
        initial={{ scale: 0.95 }}
        animate={{ scale: 1 }}
        transition={{ delay: 0.1 }}
      >
        <div className="relative bg-gray-900/60 backdrop-blur-2xl rounded-2xl sm:rounded-3xl p-6 sm:p-8 lg:p-10 border border-white/10 shadow-2xl">
          <motion.div
            className="absolute -inset-[1px] bg-gradient-to-r from-purple-500/20 via-pink-500/20 to-orange-500/20 rounded-2xl sm:rounded-3xl opacity-50 blur-sm"
            animate={{
              opacity: [0.3, 0.6, 0.3],
            }}
            transition={{
              duration: 3,
              repeat: Infinity,
              ease: 'easeInOut',
            }}
          />

          <div className="relative z-10">
            <h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold mb-6 sm:mb-8 text-center flex items-center justify-center">
              <motion.div
                animate={{
                  scale: [1, 1.1, 1],
                }}
                transition={{
                  duration: 2,
                  repeat: Infinity,
                  ease: 'easeInOut',
                }}
              >
                <Sparkles className="mr-2 sm:mr-3 text-purple-400 w-6 h-6 sm:w-8 sm:h-8" />
              </motion.div>
              Review Your Script
            </h2>

            {/* Script Info */}
            <div className="mb-6 grid grid-cols-2 sm:grid-cols-4 gap-4">
              <div className="bg-gray-800/50 rounded-lg p-3 text-center">
                <p className="text-xs text-gray-400">Tone</p>
                <p className="text-sm font-semibold text-white">{generatedScript.tone}</p>
              </div>
              <div className="bg-gray-800/50 rounded-lg p-3 text-center">
                <p className="text-xs text-gray-400">Duration</p>
                <p className="text-sm font-semibold text-white">{generatedScript.duration}s</p>
              </div>
              <div className="bg-gray-800/50 rounded-lg p-3 text-center">
                <p className="text-xs text-gray-400">Platforms</p>
                <p className="text-sm font-semibold text-white">{generatedScript.platforms.join(', ')}</p>
              </div>
              <div className="bg-gray-800/50 rounded-lg p-3 text-center">
                <p className="text-xs text-gray-400">Generated By</p>
                <p className="text-sm font-semibold text-white capitalize">{generatedScript.generatedBy || 'AI'}</p>
              </div>
            </div>

            {/* Editable Script Content */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-300 mb-2">
                Script Content (Click to edit)
              </label>
              <textarea
                value={generatedScript.content}
                onChange={(e) => setGeneratedScript({
                  ...generatedScript,
                  content: e.target.value,
                })}
                className="w-full h-64 p-4 bg-gray-800/50 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500/50 resize-none font-mono text-sm"
                placeholder="Your script content..."
              />
            </div>

            {/* Hashtags */}
            {generatedScript.hashtags && (
              <div className="mb-6">
                <label className="block text-sm font-medium text-gray-300 mb-2">
                  Suggested Hashtags
                </label>
                <div className="flex flex-wrap gap-2">
                  {generatedScript.hashtags.map((tag, index) => (
                    <motion.span
                      key={index}
                      initial={{ opacity: 0, scale: 0.8 }}
                      animate={{ opacity: 1, scale: 1 }}
                      transition={{ delay: index * 0.05 }}
                      className="px-3 py-1 bg-purple-500/20 text-purple-400 rounded-full text-sm"
                    >
                      {tag}
                    </motion.span>
                  ))}
                </div>
              </div>
            )}

            {/* CTA */}
            {generatedScript.cta && (
              <div className="mb-6 p-4 bg-blue-500/10 border border-blue-500/30 rounded-xl">
                <p className="text-sm text-blue-400">
                  <strong>Call to Action:</strong> {generatedScript.cta}
                </p>
              </div>
            )}

            {/* Action Buttons */}
            <div className="flex flex-col sm:flex-row gap-4">
              <motion.button
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
                onClick={onStartOver}
                className="flex-1 py-3 sm:py-4 bg-gray-700/50 rounded-xl font-semibold text-white hover:bg-gray-700/70 transition-all"
              >
                Start Over
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
                onClick={onRegenerate}
                className="flex-1 py-3 sm:py-4 bg-blue-500/20 border border-blue-500/30 rounded-xl font-semibold text-blue-400 hover:bg-blue-500/30 transition-all"
              >
                Regenerate Script
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.02, y: -2 }}
                whileTap={{ scale: 0.98 }}
                onClick={onApprove}
                className="flex-1 py-3 sm:py-4 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl font-semibold text-white shadow-xl relative overflow-hidden group"
              >
                <span className="relative z-10 flex items-center justify-center">
                  Approve & Continue
                  <motion.div
                    animate={{ x: [0, 5, 0] }}
                    transition={{ duration: 1.5, repeat: Infinity, ease: 'easeInOut' }}
                  >
                    <ChevronDown className="ml-2 w-5 h-5 rotate-[-90deg]" />
                  </motion.div>
                </span>
                <motion.div
                  className="absolute inset-0 bg-gradient-to-r from-pink-500 to-purple-500"
                  initial={{ x: '-100%' }}
                  whileHover={{ x: 0 }}
                  transition={{ duration: 0.3 }}
                />
              </motion.button>
            </div>
          </div>
        </div>
      </motion.div>
    </div>
  </motion.div>
)

export default ScriptReview
